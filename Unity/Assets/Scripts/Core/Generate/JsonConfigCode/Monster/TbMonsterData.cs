//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;

namespace cfg.Monster
{
   
public partial class TbMonsterData
{
    private readonly List<Monster.MonsterData> _dataList;

    private Dictionary<(int, int), Monster.MonsterData> _dataMapUnion;

    public TbMonsterData(ByteBuf _buf)
    {
        _dataList = new List<Monster.MonsterData>();
        
        for(int n = _buf.ReadSize() ; n > 0 ; --n)
        {
            Monster.MonsterData _v;
            _v = Monster.MonsterData.DeserializeMonsterData(_buf);
            _dataList.Add(_v);
        }
        _dataMapUnion = new Dictionary<(int, int), Monster.MonsterData>();
        foreach(var _v in _dataList)
        {
            _dataMapUnion.Add((_v.Level, _v.Code), _v);
        }
        PostInit();
    }


    public List<Monster.MonsterData> DataList => _dataList;

    public Monster.MonsterData Get(int level, int code) => _dataMapUnion.TryGetValue((level, code), out Monster.MonsterData __v) ? __v : null;

    public void Resolve(Dictionary<string, object> _tables)
    {
        foreach(var v in _dataList)
        {
            v.Resolve(_tables);
        }
        PostResolve();
    }

    public void TranslateText(System.Func<string, string, string> translator)
    {
        foreach(var v in _dataList)
        {
            v.TranslateText(translator);
        }
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}