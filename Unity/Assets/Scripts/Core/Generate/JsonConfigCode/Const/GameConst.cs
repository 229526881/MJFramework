//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.Const
{

public sealed partial class GameConst :  Bright.Config.BeanBase 
{
    public GameConst(JSONNode _json) 
    {
        { if(!_json["def_player"].IsNumber) { throw new SerializationException(); }  DefPlayer = _json["def_player"]; }
        { var _json2 = _json["def_gravity"]; if(!_json2.IsObject) { throw new SerializationException(); }  float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } DefGravity = new UnityEngine.Vector2(__x, __y); }
        PostInit();
    }

    public GameConst(int def_player, UnityEngine.Vector2 def_gravity ) 
    {
        this.DefPlayer = def_player;
        this.DefGravity = def_gravity;
        PostInit();
    }

    public static GameConst DeserializeGameConst(JSONNode _json)
    {
        return new Const.GameConst(_json);
    }

    public int DefPlayer { get; private set; }
    public UnityEngine.Vector2 DefGravity { get; private set; }

    public const int __ID__ = 1930847622;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "DefPlayer:" + DefPlayer + ","
        + "DefGravity:" + DefGravity + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
